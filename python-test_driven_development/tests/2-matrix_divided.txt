The `2-matrix_divided` module
=============================

Using `matrix_divided`
-----------------------

Importing the function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing each element of the matrix by 3:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing each element of the matrix by 2:
    >>> matrix = [
    ...     [2, 4, 6],
    ...     [8, 10, 12]
    ... ]
    >>> matrix_divided(matrix, 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Dividing each element of the matrix by 0:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Passing a non-numeric divisor:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Passing a non-matrix:
    >>> matrix_divided(123, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a non-numeric matrix:
    >>> matrix_divided([[1, 2, 'a'], [4, 5, 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each element of the matrix must be an integer or float

Passing a non-rectangular matrix:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
